
Перем ИмяСервераSQL;
Перем ИмяБазыSQL;
Перем ПользовательSQL;
Перем ПарольSQL;


Функция СведенияОВнешнейОбработке() Экспорт
	
	ДанныеДляРег = Новый Структура();
	ДанныеДляРег.Вставить("Наименование", "КТ: Анкеты клиентов из OpenStore");
	ДанныеДляРег.Вставить("БезопасныйРежим", Ложь);
	ДанныеДляРег.Вставить("Версия", "ver.: 1.000");
	ДанныеДляРег.Вставить("Информация", "Обработка для загрузки данных анкет клиентов из OpenStore");
	ДанныеДляРег.Вставить("Вид", "ДополнительнаяОбработка");
	
	ТабЗнКоманды = Новый ТаблицаЗначений;
	ТабЗнКоманды.Колонки.Добавить("Идентификатор");
	ТабЗнКоманды.Колонки.Добавить("Использование");
	ТабЗнКоманды.Колонки.Добавить("Представление");
	
	НовСтрока = ТабЗнКоманды.Добавить();
	НовСтрока.Идентификатор = "ЗагрузитьФактуруАнкет";
	НовСтрока.Использование = "ВызовСерверногоМетода";
	НовСтрока.Представление = "OS: Загрузка фактуры анкет клиентов";
	
	НовСтрока = ТабЗнКоманды.Добавить();
	НовСтрока.Идентификатор = "ЗагрузитьСписокАнкет";
	НовСтрока.Использование = "ВызовСерверногоМетода";
	НовСтрока.Представление = "OS: Загрузка списка анкет клиентов";
	
	НовСтрока = ТабЗнКоманды.Добавить();
	НовСтрока.Идентификатор = "ЗагрузитьДанныеАнкет";
	НовСтрока.Использование = "ВызовСерверногоМетода";
	НовСтрока.Представление = "OS: Загрузка данных анкет клиентов";
	
	НовСтрока = ТабЗнКоманды.Добавить();
	НовСтрока.Идентификатор = "ЗагрузитьДанныеАнкетЗаТриДня";
	НовСтрока.Использование = "ВызовСерверногоМетода";
	НовСтрока.Представление = "OS: Загрузка данных анкет клиентов (посл. 3 дня продаж)";
	
	НовСтрока = ТабЗнКоманды.Добавить();
	НовСтрока.Идентификатор = "ОткрытьФорму";
	НовСтрока.Использование = "ОткрытиеФормы";
	НовСтрока.Представление = "OS: Управление загрузкой анкет клиентов из OpenStore";
	
	ДанныеДляРег.Вставить("Команды", ТабЗнКоманды);
	Возврат ДанныеДляРег;
	
КонецФункции

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	
	Если РегламентныеЗаданияСервер.РаботаСВнешнимиРесурсамиЗаблокирована() Тогда Возврат; КонецЕсли;
	
	Если ИдентификаторКоманды = "ЗагрузитьФактуруАнкет" Тогда
		ВыполнитьЗагрузкуФактурыАнкетКлиентов();
	ИначеЕсли ИдентификаторКоманды = "ЗагрузитьСписокАнкет" Тогда
		ВыполнитьЗагрузкуСпискаАнкетКлиентов();
	ИначеЕсли ИдентификаторКоманды = "ЗагрузитьДанныеАнкет" Тогда
		ВыполнитьЗагрузкуДанныхАнкетКлиентов();
	ИначеЕсли ИдентификаторКоманды = "ЗагрузитьДанныеАнкетЗаТриДня" Тогда
		ВыполнитьЗагрузкуДанныхАнкетКлиентовЗаТриДня();
	ИначеЕсли ИдентификаторКоманды = "ВыгрузитьДанныеАнкетЗаПериод" Тогда
		ВыполнитьВыгрузкуДанныхАнкетКлиентовЗаПериод();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуФактурыАнкетКлиентов() Экспорт
	
	ЗапросSQL = "SELECT
		|  [CLNTFORM].[CLNTFORMNAME]
		|, [CLNTFORM].[UPDATENUM] AS UPDATENUMFORM
		|, [CLNTFORMITEMS].[CLNTFORMID]
		|, [CLNTFORMITEMS].[CLNTFORMITEMID]
		|, [CLNTFORMITEMS].[CLNTFORMITEM]
		|, [CLNTFORMITEMS].[ORDERNUM]
		|, [CLNTFORMITEMS].[ISREQUIRED]
		|, [CLNTFORMITEMS].[FIELDTYPE]
		|, [CLNTFORMITEMS].[DELFLAG]
		|, [CLNTFORMITEMS].[MINVALUE]
		|, [CLNTFORMITEMS].[UPDATENUM] AS UPDATENUMITEMS
		|, [CLNTFORMITEMS].[MAXVALUE]
		|, [CLNTFORMITEMS].[VALUEITEMS]
		|FROM [" +ИмяБазыSQL + "].[dbo].[CLNTFORM] AS CLNTFORM
		|	LEFT JOIN [" + ИмяБазыSQL + "].[dbo].[CLNTFORMITEMS] AS CLNTFORMITEMS
		|		ON [CLNTFORM].[CLNTFORMID] = [CLNTFORMITEMS].[CLNTFORMID]
		|WHERE [CLNTFORM].[DELFLAG] = 0
		|ORDER BY [CLNTFORMITEMS].[CLNTFORMID], [CLNTFORMITEMS].[CLNTFORMITEMID]";
	
	Попытка
		Connection = Новый COMОбъект("ADODB.Connection"); Command = Новый COMОбъект("ADODB.Command"); RecordSet = Новый COMОбъект("ADODB.RecordSet");
		Connection.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + ИмяСервераSQL + ";" + "UID=" + ПользовательSQL + ";" + "PWD=" + ПарольSQL + ";";
		
		Connection.Open();
		Command.ActiveConnection = Connection;
		Command.CommandText = ЗапросSQL;
		Ответ = Command.Execute();
	Исключение
		Сообщить(ОписаниеОшибки()); Возврат;
	КонецПопытки;
	
	ТаблицаДанных = ПреобразоватьОтветВТаблицуЗначений(Ответ);
	Connection.Close();
	
	ОбработатьОтвет(ТаблицаДанных, "ЗагрузкаФактурыАнкет");
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуСпискаАнкетКлиентов() Экспорт
	
	ЗапросSQL = "SELECT
		|  [CLNTFORM].[CLNTFORMID]
		|, [CLNTFORM].[CLNTFORMNAME]
		|, [CLNTFORM].[ORDERNUM]
		|, [CLNTFORM].[USESAREA]
		|, [CLNTFORM].[ACTIVEFROM]
		|, [CLNTFORM].[ACTIVETO]
		|, [CLNTFORM].[DELFLAG]
		|, [CLNTFORM].[UPDATENUM]
		|FROM ["+ ИмяБазыSQL + "].[dbo].[CLNTFORM] AS CLNTFORM
		|--WHERE [DELFLAG] = 0
		|ORDER BY [CLNTFORM].[CLNTFORMID]";
	
	Попытка
		Connection = Новый COMОбъект("ADODB.Connection"); Command = Новый COMОбъект("ADODB.Command"); RecordSet = Новый COMОбъект("ADODB.RecordSet");
		Connection.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + ИмяСервераSQL + ";" + "UID=" + ПользовательSQL + ";" + "PWD=" + ПарольSQL + ";";
		
		Connection.Open();
		Command.ActiveConnection = Connection;
		Command.CommandText = ЗапросSQL;
		Ответ = Command.Execute();
	Исключение
		Сообщить(ОписаниеОшибки()); Возврат;
	КонецПопытки;
	
	ТаблицаДанных = ПреобразоватьОтветВТаблицуЗначений(Ответ);
	Connection.Close();
	
	ОбработатьОтвет(ТаблицаДанных, "ЗагрузкаСпискаАнкет");
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуДанныхАнкетКлиентов() Экспорт
	
	ЗапросSQL = "SELECT
		|  [CLNTFORMPROPERTY].[CLNTID]
		|, [CLNTFORMPROPERTY].[CLNTFORMID]
		|, [CLNTFORMPROPERTY].[CLNTFORMITEMID]
		|, [CLNTFORMITEMS].[FIELDTYPE]
		|, [CLNTFORMPROPERTY].[CLNTPROPERTYVAL]
		|, [CLNTFORMPROPERTY].[DELFLAG]
		|, [CLNTFORMPROPERTY].[UPDATENUM]
		|FROM [" + ИмяБазыSQL + "].[dbo].[CLNTFORM] AS CLNTFORM
		|	LEFT JOIN [" + ИмяБазыSQL + "].[dbo].[CLNTFORMPROPERTY] AS CLNTFORMPROPERTY
		|		ON [CLNTFORM].[CLNTFORMID] = [CLNTFORMPROPERTY].[CLNTFORMID]
		|	LEFT JOIN [" + ИмяБазыSQL + "].[dbo].[CLNTFORMITEMS] AS CLNTFORMITEMS
		|		ON [CLNTFORM].[CLNTFORMID] = [CLNTFORMITEMS].[CLNTFORMID]
		|			AND [CLNTFORMPROPERTY].[CLNTFORMITEMID] = [CLNTFORMITEMS].[CLNTFORMITEMID]
		|WHERE [CLNTFORM].[DELFLAG] = 0 AND [CLNTFORMITEMS].[DELFLAG] = 0
		|	--AND [CLNTFORMPROPERTY].[CLNTID] <= 999873139
		|ORDER BY [CLNTFORMPROPERTY].[CLNTID], [CLNTFORMPROPERTY].[CLNTFORMID], [CLNTFORMPROPERTY].[CLNTFORMITEMID]";
	
	Попытка
		Connection = Новый COMОбъект("ADODB.Connection"); Command = Новый COMОбъект("ADODB.Command"); RecordSet = Новый COMОбъект("ADODB.RecordSet");
		Connection.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + ИмяСервераSQL + ";" + "UID=" + ПользовательSQL + ";" + "PWD=" + ПарольSQL + ";";
		
		Connection.Open();
		Command.ActiveConnection = Connection;
		Command.CommandText = ЗапросSQL;
		Ответ = Command.Execute();
	Исключение
		Сообщить(ОписаниеОшибки()); Возврат;
	КонецПопытки;
	
	ТаблицаДанных = ПреобразоватьОтветВТаблицуЗначений(Ответ);
	Connection.Close();
	
	ОбработатьОтвет(ТаблицаДанных, "ЗагрузкаДанныхАнкет");
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуДанныхАнкетКлиентовЗаТриДня() Экспорт
	
	ЗапросSQL = "SELECT
		|  [CLNTFORMPROPERTY].[CLNTID]
		|, [CLNTFORMPROPERTY].[CLNTFORMID]
		|, [CLNTFORMPROPERTY].[CLNTFORMITEMID]
		|, [CLNTFORMITEMS].[FIELDTYPE]
		|, [CLNTFORMPROPERTY].[CLNTPROPERTYVAL]
		|, [CLNTFORMPROPERTY].[DELFLAG]
		|, [CLNTFORMPROPERTY].[UPDATENUM]
		|FROM [" + ИмяБазыSQL + "].[dbo].[CLNTFORM] AS CLNTFORM
		|	LEFT JOIN [" + ИмяБазыSQL + "].[dbo].[CLNTFORMPROPERTY] AS CLNTFORMPROPERTY
		|		ON [CLNTFORM].[CLNTFORMID] = [CLNTFORMPROPERTY].[CLNTFORMID]
		|	LEFT JOIN [" + ИмяБазыSQL + "].[dbo].[CLNTFORMITEMS] AS CLNTFORMITEMS
		|		ON [CLNTFORM].[CLNTFORMID] = [CLNTFORMITEMS].[CLNTFORMID]
		|			AND [CLNTFORMPROPERTY].[CLNTFORMITEMID] = [CLNTFORMITEMS].[CLNTFORMITEMID]
		|WHERE [CLNTFORM].[DELFLAG] = 0 AND [CLNTFORMITEMS].[DELFLAG] = 0
		|	AND [CLNTFORMPROPERTY].[CLNTID] IN
		|		(SELECT DISTINCT
		|			[HEADERTABLE].CLNTID AS CLNTID
		|		FROM [OSKievDataServer].[dbo].[SALES] AS OSTABLE
		|			LEFT JOIN [OSKievDataServer].[dbo].[SALES] AS HEADERTABLE
		|				ON [OSTABLE].[SAREAID] = [HEADERTABLE].[SAREAID] AND [OSTABLE].[SESSID] = [HEADERTABLE].[SESSID] and [OSTABLE].[FRECNUM] = [HEADERTABLE].[FRECNUM] 
		|					AND [OSTABLE].[SRECNUM] = [HEADERTABLE].[SRECNUM] AND [HEADERTABLE].[SALESTAG] = 2 AND SUBSTRING([OSTABLE].[SALESTIME], 1, 8) = SUBSTRING([HEADERTABLE].[SALESTIME], 1, 8)
		|		WHERE [OSTABLE].[SALESCANC] = 0 AND [OSTABLE].[SALESTAG] = 0 AND [OSTABLE].[SALESREFUND] = 0
		|			AND [OSTABLE].[SALESTIME] BETWEEN " + Формат(НачалоДня(ТекущаяДата()) - 86400 * 3,"Л=ru_UA; ДФ=yyyyMMddHHmmss") + " AND " + Формат(КонецДня(ТекущаяДата()),"Л=ru_UA; ДФ=yyyyMMddHHmmss") + " AND [HEADERTABLE].[CLNTID] IS NOT NULL)
		|ORDER BY [CLNTFORMPROPERTY].[CLNTID], [CLNTFORMPROPERTY].[CLNTFORMID], [CLNTFORMPROPERTY].[CLNTFORMITEMID]";
	
	Попытка
		Connection = Новый COMОбъект("ADODB.Connection"); Command = Новый COMОбъект("ADODB.Command"); RecordSet = Новый COMОбъект("ADODB.RecordSet");
		Connection.ConnectionString = "DRIVER={SQL Server};" + "SERVER=" + ИмяСервераSQL + ";" + "UID=" + ПользовательSQL + ";" + "PWD=" + ПарольSQL + ";";
		
		Connection.Open();
		Command.ActiveConnection = Connection;
		Command.CommandText = ЗапросSQL;
		Ответ = Command.Execute();
	Исключение
		Сообщить(ОписаниеОшибки()); Возврат;
	КонецПопытки;
	
	ТаблицаДанных = ПреобразоватьОтветВТаблицуЗначений(Ответ);
	Connection.Close();
	
	ОбработатьОтвет(ТаблицаДанных, "ЗагрузкаДанныхАнкет");
	
КонецПроцедуры

Процедура ВыполнитьВыгрузкуДанныхАнкетКлиентовЗаПериод() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТорговыеТочки_OS.НомерТТ_OS КАК SAREAID,
		|	1  КАК PRCLEVELID,
		|	ТорговыеТочки_OS.НомерКассы_OS КАК CASHPROFILEID,
		|	ТорговыеТочки_OS.НомерСклада_OS КАК WAREHOUSEID,
		|	ТорговыеТочки_OS.Наименование КАК SAREANAME,
		|	ТорговыеТочки_OS.Адрес КАК SAREAADDR,
		|	"""" КАК RECEIPTHEADER,
		|	"""" КАК RECEIPTFOOTER,
		|	0 КАК ASKPINCODE,
		|	0 КАК DELFLAG,
		|	1 КАК UPDATENUM
		|ИЗ
		|	Справочник.ТорговыеТочки_OS КАК ТорговыеТочки_OS
		|ГДЕ
		|	НЕ ТорговыеТочки_OS.ПометкаУдаления
		|	И ТорговыеТочки_OS.НомерТТ_OS > 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выгрузить();
	
	//ОтправитьДанныеВТранзитнуюБазу(СоставитьЗапросSQLИзТаблицыЗначений(Выборка, "SAREA"));
	
КонецПроцедуры

Функция ОтправитьДанныеВТранзитнуюБазу(ЗапросSQL, ВозвращатьОтвет = Ложь, ИмяТаблицы = "OSIntegrationTransit")
	
	//СтрокаСоединения = "DRIVER={SQL Server};
	//|SERVER=srv-os.kt.local;
	//|DATABASE=" + ИмяТаблицы + ";
	//|UID=sa;
	//|PWD=bjDn5VX4;";
	
	СтрокаСоединения = "DRIVER={SQL Server};
	|SERVER=KIEV-IT-21;
	|DATABASE=" + ИмяТаблицы + ";
	|UID=SA1C;
	|PWD=132321se;";
	Connection = Новый COMОбъект("ADODB.Connection");
	Command    = Новый COMОбъект("ADODB.Command");
	RecordSet  = Новый COMОбъект("ADODB.RecordSet");
	
	Попытка
		Connection.Open(СокрЛП(СтрокаСоединения));
		Command.ActiveConnection = Connection;
		Command.CommandText = ЗапросSQL;
		Ответ = Command.Execute();
	Исключение
		Сообщить(ОписаниеОшибки());
		Сообщить(Сред(ЗапросSQL, 1, 50));
		Ответ = Неопределено;
	КонецПопытки;

	Если Ответ = Неопределено Тогда
		Если ВозвращатьОтвет Тогда
			Connection.Close(); Возврат Неопределено;
		КонецЕсли;
	ИначеЕсли ВозвращатьОтвет Тогда
		ТаблицаДанных = ПреобразоватьОтветВТаблицуЗначений(Ответ);
		Connection.Close(); 	Возврат ТаблицаДанных;
	КонецЕсли;
	
КонецФункции

Процедура ОбработатьОтвет(ТаблицаДанных, ВидОперации)
	
	Если ВидОперации = "ЗагрузкаФактурыАнкет" Тогда
		ТаблицаДанных.Сортировать("CLNTFORMID, CLNTFORMITEMID");
		МассивАнкетOS = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаДанных.ВыгрузитьКолонку("CLNTFORMID"));
		Для каждого ЭлементАнкетаOS Из МассивАнкетOS Цикл
			Если СтрЗаменить(Строка(ЭлементАнкетаOS), Символы.НПП, "") <> "1002" Тогда Продолжить; КонецЕсли;
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("CLNTFORMID", ЭлементАнкетаOS); //("CLNTFORMID", СтрЗаменить(Строка(ЭлементАнкетаOS), Символы.НПП, ""));
			СписокВопросовАнкетыOS = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
			
			СсылкаШаблонаАнкеты = Справочники.ШаблоныАнкет.НайтиПоКоду(СтрЗаменить(Строка(ЭлементАнкетаOS), Символы.НПП, ""));
			Если СсылкаШаблонаАнкеты = Справочники.ШаблоныАнкет.ПустаяСсылка() Тогда
				ОбъектШаблонаАнкеты = Справочники.ШаблоныАнкет.СоздатьЭлемент();
				ОбъектШаблонаАнкеты.Код = СтрЗаменить(Строка(СписокВопросовАнкетыOS[0].CLNTFORMID), Символы.НПП, "");
				ОбъектШаблонаАнкеты.Наименование = СписокВопросовАнкетыOS[0].CLNTFORMNAME;
				ОбъектШаблонаАнкеты.Заголовок = СписокВопросовАнкетыOS[0].CLNTFORMNAME;
				ОбъектШаблонаАнкеты.РедактированиеШаблонаЗавершено = Истина;
				ОбъектШаблонаАнкеты.КТ_НомерВерсииЗаписи = СписокВопросовАнкетыOS[0].UPDATENUMFORM;
				ОбъектШаблонаАнкеты.Записать();
				
				// Создание основного раздела шаблона анкеты
				ОбъектВопросОснРаздел = Справочники.ВопросыШаблонаАнкеты.СоздатьГруппу();
				ОбъектВопросОснРаздел.Владелец = ОбъектШаблонаАнкеты.Ссылка;
				ОбъектВопросОснРаздел.Код = 1;
				ОбъектВопросОснРаздел.Наименование = "Основной раздел";
				ОбъектВопросОснРаздел.Формулировка = "Основной раздел";
				ОбъектВопросОснРаздел.Записать();
			Иначе
				ОбъектШаблонаАнкеты = СсылкаШаблонаАнкеты.ПолучитьОбъект();
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
					|	ВопросыШаблонаАнкеты.Ссылка КАК Ссылка
					|ИЗ
					|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
					|ГДЕ
					|	ВопросыШаблонаАнкеты.Наименование = ""Основной раздел""
					|	И ВопросыШаблонаАнкеты.Владелец = &Владелец
					|	И НЕ ВопросыШаблонаАнкеты.ПометкаУдаления
					|	И ВопросыШаблонаАнкеты.ЭтоГруппа";
				Запрос.УстановитьПараметр("Владелец", СсылкаШаблонаАнкеты);
				
				ВыборкаДЗ = Запрос.Выполнить().Выбрать();
				Пока ВыборкаДЗ.Следующий() Цикл
					ОбъектВопросОснРаздел = ВыборкаДЗ.Ссылка; Прервать;
				КонецЦикла;
			КонецЕсли;
			
			Если СписокВопросовАнкетыOS.Количество() > 0 Тогда
				Для каждого ВопросАнкетыOS Из СписокВопросовАнкетыOS Цикл
					// Проведем сверку вопросов анкеты между OpenStore и ERP
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ
						|	ВопросыШаблонаАнкеты.Ссылка КАК Ссылка,
						|	ВопросыШаблонаАнкеты.КТ_НомерВерсииЗаписи КАК КТ_НомерВерсииЗаписи
						|ИЗ
						|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
						|ГДЕ
						|	ВопросыШаблонаАнкеты.Владелец = &Владелец
						|	И ВопросыШаблонаАнкеты.Код = &Код
						|	И НЕ ВопросыШаблонаАнкеты.ЭтоГруппа";
					Запрос.УстановитьПараметр("Владелец", ОбъектШаблонаАнкеты.Ссылка);
					Запрос.УстановитьПараметр("Код", 	  ВопросАнкетыOS.CLNTFORMITEMID);
					
					ТаблицаВопросовШаблона = Запрос.Выполнить().Выгрузить();
					Если ТаблицаВопросовШаблона.Количество() > 0 Тогда
						Для каждого ВопросШаблона Из ТаблицаВопросовШаблона Цикл
							Если ВопросАнкетыOS.DELFLAG = 0 Тогда
								Если ВопросАнкетыOS.UPDATENUMITEMS <> ВопросШаблона.КТ_НомерВерсииЗаписи Тогда
									ОбъектВопрос = ВопросШаблона.Ссылка.ПолучитьОбъект();
									ОбъектВопрос.ПометкаУдаления 	  = ВопросАнкетыOS.DELFLAG = 1;
									ОбъектВопрос.Наименование 		  = СокрЛП(ВопросАнкетыOS.CLNTFORMITEM);
									ОбъектВопрос.Формулировка 		  = СокрЛП(ВопросАнкетыOS.CLNTFORMITEM);
									ОбъектВопрос.Обязательный 		  = ВопросАнкетыOS.ISREQUIRED = 1;
									// Доработать обновление элементарного вопроса
									//ОбъектВопрос.ЭлементарныйВопрос = ОбновитьЭлементарныйВопрос(ВопросАнкетыOS);
									ОбъектВопрос.КТ_НомерВерсииЗаписи = ВопросАнкетыOS.UPDATENUMITEMS;
									ОбъектВопрос.КТ_КодТипаПоляИзOS   = ВопросАнкетыOS.FIELDTYPE;
									ОбъектВопрос.КТ_НомерПоПорядку    = ВопросАнкетыOS.ORDERNUM;
									ОбъектВопрос.Записать();
								КонецЕсли;
							Иначе // Вопрос анкеты был помечен на удаление в OpenStore
								ОбъектВопрос = ВопросШаблона.Ссылка.ПолучитьОбъект();
								ОбъектВопрос.ПометкаУдаления 		  = ВопросАнкетыOS.DELFLAG = 1;
								ОбъектВопрос.КТ_НомерВерсииЗаписи 	  = ВопросАнкетыOS.UPDATENUMITEMS;
								ОбъектВопрос.КТ_КодТипаПоляИзOS 	  = ВопросАнкетыOS.FIELDTYPE;
								ОбъектВопрос.Записать();
							КонецЕсли;
						КонецЦикла;
					Иначе
						Если ВопросАнкетыOS.DELFLAG = 1 Тогда Продолжить; КонецЕсли;
						
						ОбъектВопрос = Справочники.ВопросыШаблонаАнкеты.СоздатьЭлемент();
						ОбъектВопрос.ПометкаУдаления 	  = ВопросАнкетыOS.DELFLAG = 1;
						ОбъектВопрос.Владелец 			  = ОбъектШаблонаАнкеты.Ссылка;
						ОбъектВопрос.Родитель 			  = ОбъектВопросОснРаздел.Ссылка;
						ОбъектВопрос.Код 				  = ВопросАнкетыOS.CLNTFORMITEMID;
						ОбъектВопрос.Наименование 		  = СокрЛП(ВопросАнкетыOS.CLNTFORMITEM);
						ОбъектВопрос.Формулировка 		  = СокрЛП(ВопросАнкетыOS.CLNTFORMITEM);
						ОбъектВопрос.Обязательный 		  = ВопросАнкетыOS.ISREQUIRED = 1;
						ОбъектВопрос.ТипВопроса 		  = Перечисления.ТипыВопросовШаблонаАнкеты.Простой;
						ОбъектВопрос.ЭлементарныйВопрос   = СоздатьЭлементарныйВопрос(ВопросАнкетыOS);
						ОбъектВопрос.КТ_НомерВерсииЗаписи = ВопросАнкетыOS.UPDATENUMITEMS;
						ОбъектВопрос.КТ_КодТипаПоляИзOS   = ВопросАнкетыOS.FIELDTYPE;
						ОбъектВопрос.КТ_НомерПоПорядку    = ВопросАнкетыOS.ORDERNUM;
						ОбъектВопрос.Записать();
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидОперации = "ЗагрузкаСпискаАнкет" Тогда
		тзДействующиеНазначенияОпросов = ПолучитьДействующиеНазначенияОпросов();
		
		Для каждого СтрокаАнкеты Из ТаблицаДанных Цикл
			Если СтрЗаменить(Строка(СтрокаАнкеты.CLNTFORMID), Символы.НПП, "") <> "1002" Тогда Продолжить; КонецЕсли;
			
			СтруктураПоискаОпроса = Новый Структура;
			СтруктураПоискаОпроса.Вставить("КодШаблона", СтрЗаменить(Строка(СтрокаАнкеты.CLNTFORMID), Символы.НПП, ""));
			НайденныеОпросы = тзДействующиеНазначенияОпросов.НайтиСтроки(СтруктураПоискаОпроса);
			Если НайденныеОпросы.Количество() > 0 Тогда
				СсылкаОпрос = НайденныеОпросы[0].Ссылка;
			Иначе
				СсылкаОпрос = Документы.НазначениеОпросов.ПустаяСсылка();
			КонецЕсли;
			
			Если СсылкаОпрос.Пустая() Тогда
				ОбъектОпрос = Документы.НазначениеОпросов.СоздатьДокумент();
				ОбъектОпрос.ПометкаУдаления 		= СтрокаАнкеты.DELFLAG = 1;
				ОбъектОпрос.Дата 					= ТекущаяДата();
				ОбъектОпрос.ШаблонАнкеты 			= Справочники.ШаблоныАнкет.НайтиПоКоду(СтрЗаменить(Строка(СтрокаАнкеты.CLNTFORMID), Символы.НПП, ""));
				Если НЕ ЗначениеЗаполнено(ОбъектОпрос.ШаблонАнкеты) Тогда
					// Обработка создания шаблона анкеты
				КонецЕсли;
				//ОбъектОпрос.ТипРеспондентов 		= Справочники.Партнеры.ПустаяСсылка();
				ОбъектОпрос.ДатаНачала 				= ?(ЗначениеЗаполнено(СтрокаАнкеты.ACTIVEFROM), Дата(СтрокаАнкеты.ACTIVEFROM), Дата(1, 1, 1));
				ОбъектОпрос.ДатаОкончания 			= ?(ЗначениеЗаполнено(СтрокаАнкеты.ACTIVETO),   Дата(СтрокаАнкеты.ACTIVETO),   Дата(1, 1, 1));
				ОбъектОпрос.ВозможностьПредварительногоСохранения = Истина;
				ОбъектОпрос.СвободныйОпрос 			= Ложь;
				ОбъектОпрос.Наименование 			= СтрокаАнкеты.CLNTFORMNAME;
				ОбъектОпрос.ПоказыватьВАрхивеАнкет 	= Истина;
				ОбъектОпрос.Комментарий 			= "КТ: Опрос загружен автоматически из OpenStore";
				ОбъектОпрос.КТ_НомерВерсииЗаписи 	= СтрокаАнкеты.UPDATENUM;
				
				Если ОбъектОпрос.ПометкаУдаления Тогда
					ОбъектОпрос.Записать(РежимЗаписиДокумента.Запись);
				Иначе
					ОбъектОпрос.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				КонецЕсли;
			Иначе
				Если СтрокаАнкеты.UPDATENUM <> СсылкаОпрос.КТ_НомерВерсииЗаписи Тогда
					ОбъектОпрос = СсылкаОпрос.ПолучитьОбъект();
					ОбъектОпрос.ПометкаУдаления 		= СтрокаАнкеты.DELFLAG = 1;
					ОбъектОпрос.Дата 					= ТекущаяДата();
					ОбъектОпрос.ШаблонАнкеты 			= Справочники.ШаблоныАнкет.НайтиПоКоду(СтрЗаменить(Строка(СтрокаАнкеты.CLNTFORMID), Символы.НПП, ""));
					Если НЕ ЗначениеЗаполнено(ОбъектОпрос.ШаблонАнкеты) Тогда
						// Обработка создания шаблона анкеты
					КонецЕсли;
					//ОбъектОпрос.ТипРеспондентов 		= Справочники.Партнеры.ПустаяСсылка();
					ОбъектОпрос.ДатаНачала 				= ?(ЗначениеЗаполнено(СтрокаАнкеты.ACTIVEFROM), Дата(СтрокаАнкеты.ACTIVEFROM), Дата(1, 1, 1));
					ОбъектОпрос.ДатаОкончания 			= ?(ЗначениеЗаполнено(СтрокаАнкеты.ACTIVETO),   Дата(СтрокаАнкеты.ACTIVETO),   Дата(1, 1, 1));
					ОбъектОпрос.ВозможностьПредварительногоСохранения = Истина;
					ОбъектОпрос.СвободныйОпрос 			= Ложь;
					ОбъектОпрос.Наименование 			= СтрокаАнкеты.CLNTFORMNAME;
					ОбъектОпрос.ПоказыватьВАрхивеАнкет 	= Истина;
					ОбъектОпрос.Комментарий 			= "КТ: Опрос загружен автоматически из OpenStore";
					ОбъектОпрос.КТ_НомерВерсииЗаписи 	= СтрокаАнкеты.UPDATENUM;
					
					Если ОбъектОпрос.ПометкаУдаления Тогда
						ОбъектОпрос.Записать(РежимЗаписиДокумента.Запись);
					Иначе
						ОбъектОпрос.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидОперации = "ЗагрузкаДанныхАнкет" Тогда
		тзАктуальныеВопросыШаблонаАнкеты = ПолучитьАктуальныеВопросыШаблонаАнкеты();
		тзДействующиеНазначенияОпросов   = ПолучитьДействующиеНазначенияОпросов();
		тзСоответствиеПартнерКлиентИД    = ПолучитьСоответствиеПартнерКлиентИД();
		
		ВопросУкрАнкеты_ПолКлиента 		  = Справочники.ВопросыШаблонаАнкеты.ПолучитьСсылку(Новый УникальныйИдентификатор("ae3bff8e-3e64-11ea-91ff-005056842812"));
		ВопросУкрАнкеты_ДатаРождения 	  = Справочники.ВопросыШаблонаАнкеты.ПустаяСсылка();
		ВариантОтветаУкрАнкеты_ПолМужчина = Справочники.ВариантыОтветовАнкет.ПолучитьСсылку(Новый УникальныйИдентификатор("ae3bff8c-3e64-11ea-91ff-005056842812"));
		ВариантОтветаУкрАнкеты_ПолЖенщина = Справочники.ВариантыОтветовАнкет.ПолучитьСсылку(Новый УникальныйИдентификатор("ae3bff8d-3e64-11ea-91ff-005056842812"));
		
		ТаблицаСоответствияКлиентАнкета = ТаблицаДанных.Скопировать();
		ТаблицаСоответствияКлиентАнкета.Свернуть("CLNTID, CLNTFORMID");
		
		ТаблицаДанных.Сортировать("CLNTID, CLNTFORMID, CLNTFORMITEMID");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	Анкета.Ссылка КАК Ссылка,
			|	Анкета.Опрос КАК Опрос,
			|	Анкета.Опрос.ШаблонАнкеты КАК ШаблонАнкеты,
			|	Анкета.Опрос.ШаблонАнкеты.Код КАК КодШаблонаАнкеты,
			|	Анкета.Респондент КАК Партнер,
			|	ПрограммаЛояльностиПоЭИ.CLNTID КАК КодПартнера
			|ИЗ
			|	Документ.Анкета КАК Анкета
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрограммаЛоялностиПоЭИ КАК ПрограммаЛояльностиПоЭИ
			|		ПО Анкета.Респондент = ПрограммаЛояльностиПоЭИ.Партнер
			|ГДЕ
			|	Анкета.Опрос В
			|			(ВЫБРАТЬ
			|				НазначениеОпросов.Ссылка КАК Ссылка
			|			ИЗ
			|				Документ.НазначениеОпросов КАК НазначениеОпросов
			|			ГДЕ
			|				НазначениеОпросов.ШаблонАнкеты.Код В (&МассивКодовШаблоновАнкет)
			|				И НазначениеОпросов.Проведен)
			|	И Анкета.Проведен";
		
		МассивКодов = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаДанных.ВыгрузитьКолонку("CLNTFORMID"));
		МассивКодовШаблоновАнкет = Новый Массив;
		Для каждого ЭлементКод Из МассивКодов Цикл
			Если СтрЗаменить(Строка(ЭлементКод), Символы.НПП, "") <> "1002" Тогда Продолжить; КонецЕсли;
			МассивКодовШаблоновАнкет.Добавить(СтрЗаменить(Строка(ЭлементКод), Символы.НПП, ""));
		КонецЦикла;
		Запрос.УстановитьПараметр("МассивКодовШаблоновАнкет", МассивКодовШаблоновАнкет);
		ТаблицаАнкетКлиентов = Запрос.Выполнить().Выгрузить();
		
		Для каждого СтрокаСоответствияOS Из ТаблицаСоответствияКлиентАнкета Цикл
			Если СтрЗаменить(Строка(СтрокаСоответствияOS.CLNTFORMID), Символы.НПП, "") <> "1002" Тогда Продолжить; КонецЕсли;
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("CLNTID",     СтрокаСоответствияOS.CLNTID);
			СтруктураОтбора.Вставить("CLNTFORMID", СтрокаСоответствияOS.CLNTFORMID);
			АнкетныеДанныеКлиентаИзOS = ТаблицаДанных.НайтиСтроки(СтруктураОтбора);
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("КодПартнера", 	 СтрЗаменить(Строка(СтрокаСоответствияOS.CLNTID), Символы.НПП, ""));
			СтруктураПоиска.Вставить("КодШаблонаАнкеты", СтрЗаменить(Строка(СтрокаСоответствияOS.CLNTFORMID), Символы.НПП, ""));
			НайденныеАнкеты = ТаблицаАнкетКлиентов.НайтиСтроки(СтруктураПоиска);
			Если НайденныеАнкеты.Количество() > 0 Тогда
				Если НайденныеАнкеты.Количество() > 1 Тогда
					ЗаписьЖурналаРегистрации("КТ: Загрузка анкет клиентов из OpenStore.", УровеньЖурналаРегистрации.Информация,,, "По клиенту существует две заполненные анкеты по одному опросу.");
				КонецЕсли;
				
				// Если ответы ERP и OS отличаются, то оставляем вариант ERP, если загружается новый ответ из OS, то добавляем новый ответ
				СсылкаАнкетаКлиента = НайденныеАнкеты[0].Ссылка;
				ОбъектАнкетаКлиента = СсылкаАнкетаКлиента.ПолучитьОбъект();
				СоставАнкетыИзменился = Ложь;
				
				Для каждого СтрокаОтветаНаВопросАнкетыOS Из АнкетныеДанныеКлиентаИзOS Цикл
					СтруктураПоискаВопроса = Новый Структура;
					СтруктураПоискаВопроса.Вставить("КодШаблонаАнкеты", СтрЗаменить(Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMID), Символы.НПП, ""));
					СтруктураПоискаВопроса.Вставить("КодВопросаАнкеты", СтрокаОтветаНаВопросАнкетыOS.CLNTFORMITEMID);
					СтрокаАктуальногоВопросаШаблонаАнкеты = тзАктуальныеВопросыШаблонаАнкеты.НайтиСтроки(СтруктураПоискаВопроса)[0];
					
					текСтрокаСоставаАнкетыКлиента = СсылкаАнкетаКлиента.Состав.Найти(СтрокаАктуальногоВопросаШаблонаАнкеты.ВопросАнкеты, "Вопрос");
					Если текСтрокаСоставаАнкетыКлиента = Неопределено Тогда
						СоставАнкетыИзменился = Истина;
						// Отсутствует ответ в анкете клиента в ERP (значит анкета была дозаполнена в OpenStore)
						СтрокаСоставаАнкеты = ОбъектАнкетаКлиента.Состав.Добавить();
						СтрокаСоставаАнкеты.Вопрос 				= СтрокаАктуальногоВопросаШаблонаАнкеты.ВопросАнкеты;
						СтрокаСоставаАнкеты.НомерЯчейки 		= 0;
						Если СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 2 Тогда
							СтрокаСоставаАнкеты.Ответ 			= 0;
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL;
						ИначеЕсли СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 4 Тогда
							СтрокаСоставаАнкеты.Ответ 			= ?(СтрокаОтветаНаВопросАнкетыOS = 0, Ложь, Истина);
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
						ИначеЕсли СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 6 Тогда
							СтрокаСоставаАнкеты.Ответ 			= ПолучитьВариантОтветаНаВопросАнкеты(СтрокаОтветаНаВопросАнкетыOS);
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
							Если НЕ ЗначениеЗаполнено(СтрокаСоставаАнкеты.Ответ) Тогда
								ЗаписьЖурналаРегистрации("КТ: Загрузка анкет клиентов из OpenStore.", УровеньЖурналаРегистрации.Информация,,, "Ошибка поиска варианта ответа (этап заполнения анкеты)!"
									+ " КодШаблонаАнкеты = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMID) + ", КодВопросаАнкеты = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMITEMID)
									+ ", ВариантОтветаOS = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL));
							КонецЕсли;
						Иначе
							СтрокаСоставаАнкеты.Ответ 			= СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL;
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
						КонецЕсли;
						СтрокаСоставаАнкеты.ЭлементарныйВопрос 	= СтрокаАктуальногоВопросаШаблонаАнкеты.ЭлементарныйВопрос;
					Иначе
						// Для "Укр. анкеты" дозаполняем карточку клиента данными по полу клиента. Приоритетной базой является ERP
						Если текСтрокаСоставаАнкетыКлиента.Вопрос = ВопросУкрАнкеты_ПолКлиента Тогда
							Если НЕ ЗначениеЗаполнено(ОбъектАнкетаКлиента.Респондент.Пол) И ЗначениеЗаполнено(текСтрокаСоставаАнкетыКлиента.Ответ) Тогда
								КлиентИзменен = Ложь;
								ОбъектКлиент = ОбъектАнкетаКлиента.Респондент.ПолучитьОбъект();
								
								Если текСтрокаСоставаАнкетыКлиента.Ответ = ВариантОтветаУкрАнкеты_ПолМужчина Тогда
									ОбъектКлиент.Пол = Перечисления.ПолФизическогоЛица.Мужской; 	КлиентИзменен = Истина;
								ИначеЕсли текСтрокаСоставаАнкетыКлиента.Ответ = ВариантОтветаУкрАнкеты_ПолЖенщина Тогда
									ОбъектКлиент.Пол = Перечисления.ПолФизическогоЛица.Женский; 	КлиентИзменен = Истина;
								КонецЕсли;
								
								Если КлиентИзменен Тогда
									Попытка
										ОбъектКлиент.ОбменДанными.Загрузка = Истина;
										ОбъектКлиент.Записать();
									Исключение
									КонецПопытки;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если СоставАнкетыИзменился Тогда
					ОбъектАнкетаКлиента.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
				КонецЕсли;
			Иначе
				ОбъектАнкетаКлиента = Документы.Анкета.СоздатьДокумент();
				ОбъектАнкетаКлиента.Дата = ТекущаяДата();
				ОбъектАнкетаКлиента.ДатаРедактирования = ТекущаяДата();
				ДействующийОпрос = тзДействующиеНазначенияОпросов.Найти(СтрЗаменить(Строка(СтрокаСоответствияOS.CLNTFORMID), Символы.НПП, ""), "КодШаблона");
				Если ДействующийОпрос = Неопределено Тогда
					ОбъектАнкетаКлиента.Опрос = Документы.НазначениеОпросов.ПустаяСсылка();
					ЗаписьЖурналаРегистрации("КТ: Загрузка анкет клиентов из OpenStore.", УровеньЖурналаРегистрации.Информация,,, "Ошибка поиска опроса (этап заполнения анкеты)! Код шаблона (CLNTFORMID) = "
						+ Строка(СтрокаСоответствияOS.CLNTFORMID));
				Иначе
					ОбъектАнкетаКлиента.Опрос = ДействующийОпрос.Ссылка;
				КонецЕсли;
				ОбъектАнкетаКлиента.РедактируемыйРаздел = "Заключение";
				ЗаписьКлиента = тзСоответствиеПартнерКлиентИД.Найти(СтрЗаменить(Строка(СтрокаСоответствияOS.CLNTID), Символы.НПП, ""), "CLNTID");
				Если ЗаписьКлиента = Неопределено Тогда
					ЗаписьЖурналаРегистрации("КТ: Загрузка анкет клиентов из OpenStore.", УровеньЖурналаРегистрации.Информация,,, "Ошибка поиска партнера (этап заполнения анкеты)! Код партнера (CLNTID) = "
						+ Строка(СтрокаСоответствияOS.CLNTID));
					Продолжить;
				Иначе
					ОбъектАнкетаКлиента.Респондент = ЗаписьКлиента.Партнер;
				КонецЕсли;
				ОбъектАнкетаКлиента.Комментарий = "КТ: Анкета загружена автоматически из OpenStore";
				
				Для каждого СтрокаОтветаНаВопросАнкетыOS Из АнкетныеДанныеКлиентаИзOS Цикл
					СтрокаСоставаАнкеты = ОбъектАнкетаКлиента.Состав.Добавить();
					СтруктураПоискаВопроса = Новый Структура;
					СтруктураПоискаВопроса.Вставить("КодШаблонаАнкеты", СтрЗаменить(Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMID), Символы.НПП, ""));
					СтруктураПоискаВопроса.Вставить("КодВопросаАнкеты", СтрокаОтветаНаВопросАнкетыOS.CLNTFORMITEMID);
					ВопросыШаблона = тзАктуальныеВопросыШаблонаАнкеты.НайтиСтроки(СтруктураПоискаВопроса);
					Если ВопросыШаблона.Количество() > 0 Тогда
						СтрокаСоставаАнкеты.Вопрос 				= ВопросыШаблона[0].ВопросАнкеты;
						СтрокаСоставаАнкеты.НомерЯчейки 		= 0;
						Если СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 2 Тогда
							СтрокаСоставаАнкеты.Ответ 			= 0;
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL;
						//ИначеЕсли СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 3 Тогда
						//	СтрокаСоставаАнкеты.Ответ 			= СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL;
						//	СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
						ИначеЕсли СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 4 Тогда
							СтрокаСоставаАнкеты.Ответ 			= ?(СтрокаОтветаНаВопросАнкетыOS = 0, Ложь, Истина);
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
						ИначеЕсли СтрокаОтветаНаВопросАнкетыOS.FIELDTYPE = 6 Тогда
							СтрокаСоставаАнкеты.Ответ 			= ПолучитьВариантОтветаНаВопросАнкеты(СтрокаОтветаНаВопросАнкетыOS);
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
							Если НЕ ЗначениеЗаполнено(СтрокаСоставаАнкеты.Ответ) Тогда
								ЗаписьЖурналаРегистрации("КТ: Загрузка анкет клиентов из OpenStore.", УровеньЖурналаРегистрации.Информация,,, "Ошибка поиска варианта ответа (этап заполнения анкеты)!"
									+ " КодШаблонаАнкеты = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMID) + ", КодВопросаАнкеты = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTFORMITEMID)
									+ ", ВариантОтветаOS = " + Строка(СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL));
							КонецЕсли;
						Иначе
							СтрокаСоставаАнкеты.Ответ 			= СтрокаОтветаНаВопросАнкетыOS.CLNTPROPERTYVAL;
							СтрокаСоставаАнкеты.ОткрытыйОтвет 	= "";
						КонецЕсли;
						СтрокаСоставаАнкеты.ЭлементарныйВопрос 	= ВопросыШаблона[0].ЭлементарныйВопрос;
						
						// Для "Укр. анкеты" дозаполняем карточку клиента данными по полу клиента
						Если СтрокаСоставаАнкеты.Вопрос = ВопросУкрАнкеты_ПолКлиента Тогда
							Если НЕ ЗначениеЗаполнено(ОбъектАнкетаКлиента.Респондент.Пол) И ЗначениеЗаполнено(СтрокаСоставаАнкеты.Ответ) Тогда
								ОбъектКлиент = ОбъектАнкетаКлиента.Респондент.ПолучитьОбъект();
								
								Если СтрокаСоставаАнкеты.Ответ = ВариантОтветаУкрАнкеты_ПолМужчина Тогда
									ОбъектКлиент.Пол = Перечисления.ПолФизическогоЛица.Мужской;
								ИначеЕсли СтрокаСоставаАнкеты.Ответ = ВариантОтветаУкрАнкеты_ПолЖенщина Тогда
									ОбъектКлиент.Пол = Перечисления.ПолФизическогоЛица.Женский;
								КонецЕсли;
								
								ОбъектКлиент.ОбменДанными.Загрузка = Истина;
								ОбъектКлиент.Записать();
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				ОбъектАнкетаКлиента.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьЭлементарныйВопрос(парВопросАнкетыOS)
	
	ОбъектЭлементарныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
	ОбъектЭлементарныйВопрос.ПометкаУдаления = парВопросАнкетыOS.DELFLAG = 1;
	ОбъектЭлементарныйВопрос.Наименование = СокрЛП(парВопросАнкетыOS.CLNTFORMITEM);
	ОбъектЭлементарныйВопрос.Формулировка = СокрЛП(парВопросАнкетыOS.CLNTFORMITEM);
	
	Если      парВопросАнкетыOS.FIELDTYPE = 2 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 3 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Дата;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 4 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 6 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 7 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка;
		ОбъектЭлементарныйВопрос.Длина = 100;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 8 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка;
		Если Найти(ВРег(Строка(ОбъектЭлементарныйВопрос.Наименование)), "ТЕЛЕФОН") > 0 Тогда
			ОбъектЭлементарныйВопрос.Длина = 15;
		Иначе
			ОбъектЭлементарныйВопрос.Длина = ?(ЗначениеЗаполнено(парВопросАнкетыOS.VALUEITEMS), СтрДлина(парВопросАнкетыOS.VALUEITEMS), 10);
		КонецЕсли;
	Иначе
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст;
	КонецЕсли;
	
	ОбъектЭлементарныйВопрос.Записать();
	
	Если парВопросАнкетыOS.FIELDTYPE = 6 Тогда
		МассивВариантовОтветов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(парВопросАнкетыOS.VALUEITEMS, ";");
		Для каждого ВариантОтвета Из МассивВариантовОтветов Цикл
			ОбъектВариантОтвета = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			ОбъектВариантОтвета.ПометкаУдаления = парВопросАнкетыOS.DELFLAG = 1;
			ОбъектВариантОтвета.Владелец = ОбъектЭлементарныйВопрос.Ссылка;
			ОбъектВариантОтвета.Наименование = СокрЛП(ВариантОтвета);
			ОбъектВариантОтвета.ТребуетОткрытогоОтвета = Ложь;
			ОбъектВариантОтвета.РеквизитДопУпорядочивания = МассивВариантовОтветов.Найти(ВариантОтвета) + 1;
			ОбъектВариантОтвета.Записать();
		КонецЦикла;
	КонецЕсли;
	
	Возврат ОбъектЭлементарныйВопрос.Ссылка;
	
КонецФункции

Функция ОбновитьЭлементарныйВопрос(парВопросАнкетыOS)
	
	ОбъектЭлементарныйВопрос = ПланыВидовХарактеристик.ВопросыДляАнкетирования.СоздатьЭлемент();
	ОбъектЭлементарныйВопрос.ПометкаУдаления = парВопросАнкетыOS.DELFLAG = 1;
	ОбъектЭлементарныйВопрос.Наименование = СокрЛП(парВопросАнкетыOS.CLNTFORMITEM);
	ОбъектЭлементарныйВопрос.Формулировка = СокрЛП(парВопросАнкетыOS.CLNTFORMITEM);
	
	Если      парВопросАнкетыOS.FIELDTYPE = 2 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 3 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Дата;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 4 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 6 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.ОдинВариантИз;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 7 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Булево;
	ИначеЕсли парВопросАнкетыOS.FIELDTYPE = 8 Тогда
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Строка;
		ОбъектЭлементарныйВопрос.Длина = ?(ЗначениеЗаполнено(парВопросАнкетыOS.VALUEITEMS), СтрДлина(парВопросАнкетыOS.VALUEITEMS), 10);
	Иначе
		ОбъектЭлементарныйВопрос.ТипОтвета = Перечисления.ТипыОтветовНаВопрос.Текст;
	КонецЕсли;
	
	ОбъектЭлементарныйВопрос.Записать();
	
	Если парВопросАнкетыOS.FIELDTYPE = 6 Тогда
		МассивВариантовОтветов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(парВопросАнкетыOS.VALUEITEMS, ";");
		Для каждого ВариантОтвета Из МассивВариантовОтветов Цикл
			ОбъектВариантОтвета = Справочники.ВариантыОтветовАнкет.СоздатьЭлемент();
			ОбъектВариантОтвета.ПометкаУдаления = парВопросАнкетыOS.DELFLAG = 1;
			ОбъектВариантОтвета.Владелец = ОбъектЭлементарныйВопрос.Ссылка;
			ОбъектВариантОтвета.Наименование = СокрЛП(ВариантОтвета);
			ОбъектВариантОтвета.ТребуетОткрытогоОтвета = Ложь;
			ОбъектВариантОтвета.РеквизитДопУпорядочивания = МассивВариантовОтветов.Найти(ВариантОтвета) + 1;
			ОбъектВариантОтвета.Записать();
		КонецЦикла;
	КонецЕсли;
	
	Возврат ОбъектЭлементарныйВопрос.Ссылка;
	
КонецФункции

Функция ПолучитьДействующиеНазначенияОпросов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	НазначениеОпросов.Ссылка КАК Ссылка,
		|	НазначениеОпросов.ШаблонАнкеты.Код КАК КодШаблона
		|ИЗ
		|	Документ.НазначениеОпросов КАК НазначениеОпросов
		|ГДЕ
		|	НазначениеОпросов.Проведен";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьСоответствиеПартнерКлиентИД()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ПрограммаЛоялностиПоЭИ.Партнер КАК Партнер,
		|	ПрограммаЛоялностиПоЭИ.CLNTID КАК CLNTID
		|ИЗ
		|	РегистрСведений.ПрограммаЛоялностиПоЭИ КАК ПрограммаЛоялностиПоЭИ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьАктуальныеВопросыШаблонаАнкеты()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка КАК ВопросАнкеты,
		|	ВопросыШаблонаАнкеты.Владелец КАК ШаблонАнкеты,
		|	ВопросыШаблонаАнкеты.Владелец.Код КАК КодШаблонаАнкеты,
		|	ВопросыШаблонаАнкеты.Код КАК КодВопросаАнкеты,
		|	ВопросыШаблонаАнкеты.ТипВопроса КАК ТипВопроса,
		|	ВопросыШаблонаАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|ГДЕ
		|	ВопросыШаблонаАнкеты.ТипВопроса = ЗНАЧЕНИЕ(Перечисление.ТипыВопросовШаблонаАнкеты.Простой)
		|	И НЕ ВопросыШаблонаАнкеты.ПометкаУдаления";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьВариантОтветаНаВопросАнкеты(парСтрокаОтветаOS)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
		|	ВопросыШаблонаАнкеты.Ссылка КАК Ссылка,
		|	ВопросыШаблонаАнкеты.Владелец КАК ШаблонАнкеты,
		|	ВопросыШаблонаАнкеты.Код КАК КодВопросаАнкеты,
		|	ВариантыОтветовАнкет.Ссылка КАК ВариантОтвета
		|ИЗ
		|	Справочник.ВопросыШаблонаАнкеты КАК ВопросыШаблонаАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовАнкет КАК ВариантыОтветовАнкет
		|		ПО ВопросыШаблонаАнкеты.ЭлементарныйВопрос = ВариантыОтветовАнкет.Владелец
		|ГДЕ
		|	ВариантыОтветовАнкет.Наименование ПОДОБНО &ВариантОтветаOS
		|	И ВопросыШаблонаАнкеты.Владелец.Код = &КодШаблонаАнкеты
		|	И ВопросыШаблонаАнкеты.Код = &КодВопросаАнкеты
		|	И НЕ ВопросыШаблонаАнкеты.ЭтоГруппа";
	Запрос.УстановитьПараметр("ВариантОтветаOS",  парСтрокаОтветаOS.CLNTPROPERTYVAL);
	Запрос.УстановитьПараметр("КодШаблонаАнкеты", СтрЗаменить(Строка(парСтрокаОтветаOS.CLNTFORMID), Символы.НПП, ""));
	Запрос.УстановитьПараметр("КодВопросаАнкеты", парСтрокаОтветаOS.CLNTFORMITEMID);
	
	ВыборкаДЗ = Запрос.Выполнить().Выбрать();
	ВыборкаДЗ.Следующий();
	
	Возврат ?(ЗначениеЗаполнено(ВыборкаДЗ.ВариантОтвета), ВыборкаДЗ.ВариантОтвета, Справочники.ВариантыОтветовАнкет.ПустаяСсылка());
	
КонецФункции

Функция ПреобразоватьОтветВТаблицуЗначений(Ответ)
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	Для НомерСтолбца = 0 По Ответ.Fields.Count - 1 Цикл
		ИмяСтолбца = Ответ.Fields.Item(НомерСтолбца).Name;
		ТаблицаДанных.Колонки.Добавить(ИмяСтолбца);
	КонецЦикла;
	
	Пока НЕ Ответ.EOF Цикл
		НоваяСтрока = ТаблицаДанных.Добавить();
		Для НомерСтолбца = 0 По Ответ.Fields.Count - 1 Цикл
			НоваяСтрока.Установить(НомерСтолбца, Ответ.Fields(НомерСтолбца).Value);
		КонецЦикла;
		Ответ.MoveNext();
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции


ИмяСервераSQL = "SRV-OS";
ИмяБазыSQL = "OSKievDataServer";
ПользовательSQL = "sa";
ПарольSQL = "bjDn5VX4";
